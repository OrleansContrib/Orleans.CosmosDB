pool:
  vmImage: "windows-2019"

variables:
  buildConfiguration: "Release"

steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: 3.0.100

  - task: DotNetCoreCLI@2
    inputs:
      command: "restore"
      projects: "**/*.csproj"

  - task: DotNetCoreCLI@2
    inputs:
      command: "build"
      projects: "**/*.csproj"
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: "src/Orleans.Clustering.CosmosDB/*.csproj"
      packDirectory: "$(build.artifactStagingDirectory)"
      configuration: "$(buildConfiguration)"
      versioningScheme: byEnvVar
      versionEnvVar: Version

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: "src/Orleans.Persistence.CosmosDB/*.csproj"
      packDirectory: "$(build.artifactStagingDirectory)"
      configuration: "$(buildConfiguration)"
      versioningScheme: byEnvVar
      versionEnvVar: Version

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: "src/Orleans.Reminders.CosmosDB/*.csproj"
      packDirectory: "$(build.artifactStagingDirectory)"
      configuration: "$(buildConfiguration)"
      versioningScheme: byEnvVar
      versionEnvVar: Version

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      packagesToPack: "src/Orleans.Streaming.CosmosDB/*.csproj"
      packDirectory: "$(build.artifactStagingDirectory)"
      configuration: "$(buildConfiguration)"
      versioningScheme: byEnvVar
      versionEnvVar: Version

  - task: NuGetCommand@2
    inputs:
      command: push
      packagesToPush: "$(build.ArtifactStagingDirectory)/**/*.nupkg;!$(build.ArtifactStagingDirectory)/**/*.symbols.nupkg"
      publishFeedCredentials: "OSS"
      nuGetFeedType: external
      versioningScheme: byEnvVar
      versionEnvVar: Version
